version: '3'

silent: true

vars:
  TOOLCHAIN: +1.81.0-x86_64-unknown-linux-gnu
  COSMWASM_CHECK_VERSION: 3.0.1

tasks:

  all:
    desc: Runs all checks
    summary: |
      Runs all viable checks for cosmwasm.
      Execute this task before pushing any changes.
      This task takes a significant amount of time to complete.
    cmds:
      - task: clean

  install-cosmwasm-check:
    desc: Installs cosmwasm-check tool (released version and currently developed version)
    cmds:
      # Install recently released cosmwasm-check and rename it to cosmwasm-check-released
      - cmd: cargo install cosmwasm-check@{{.COSMWASM_CHECK_VERSION}} --locked --force
      - cmd: mv ~/.cargo/bin/cosmwasm-check ~/.cargo/bin/cosmwasm-check-released
      # Install most recent version of cosmwasm-check
      - cmd: cargo install --path ./packages/check --locked --force

  check-contracts:
    desc: Performs checks for all contracts
    cmds:
#      - task: install-cosmwasm-check
      - task: check-burner

  check-burner:
    desc: Performs checks for burner contract
    dir: ./contracts/burner
    cmds:
      # Check formatting
      - cmd: cargo {{.TOOLCHAIN}} fmt -- --check
      # Run unit tests
      - cmd: cargo {{.TOOLCHAIN}} test --lib --locked --quiet
      # Build WASM binary
      - cmd: cargo {{.TOOLCHAIN}} build --release --lib --locked --target wasm32-unknown-unknown
      # Run linter
      - cmd: cargo clippy --all-targets --tests -- -D warnings
      # Run integration tests
      - cmd: cargo test --test integration --locked --quiet
      # Build and run schema generator
      - cmd: cargo run --bin schema --locked
      # Ensure schemas are up-to-date
      - cmd: git diff --quiet ./schema
      # Check contract using recently released cosmwasm-check
      - cmd: cosmwasm-check-released ./target/wasm32-unknown-unknown/release/*.wasm
      # Check contract using most recent version of cosmwasm-check
      - cmd: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm

  clean:
    desc: Removes all compiled artifacts
    cmds:
      - cmd: cargo clean
      - task: clean-burner

  clean-burner:
    desc: Removes all compiled artifacts for burner contract
    dir: ./contracts/burner
    cmds:
      - cmd: cargo clean

name: contracts

on: [ push ]

jobs:
  stable-rust:
    name: stable-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.82.0
          target: wasm32-unknown-unknown
          components: clippy, rustfmt
          cache-directories: |
            ${{ github.workspace }}/contracts

      - name: Verify contracts
        run: ./gh-actions/verify-contracts-stable

      - uses: actions/upload-artifact@v4
        with:
          name: burner-${{ runner.os }}
          path: ./contracts/burner/target/wasm32-unknown-unknown/release/burner.wasm

      - uses: actions/download-artifact@v4
        with:
          name: crypto-verify-${{ runner.os }}
          path: ./contracts/crypto-verify/target/wasm32-unknown-unknown/release/crypto_verify.wasm

      - uses: actions/download-artifact@v4
        with:
          name: cyberpunk-${{ runner.os }}
          path: ./contracts/cyberpunk/target/wasm32-unknown-unknown/release/cyberpunk.wasm

      - uses: actions/download-artifact@v4
        with:
          name: empty-${{ runner.os }}
          path: ./contracts/empty/target/wasm32-unknown-unknown/release/empty.wasm

      - uses: actions/download-artifact@v4
        with:
          name: hackatom-${{ runner.os }}
          path: ./contracts/hackatom/target/wasm32-unknown-unknown/release/hackatom.wasm

      - uses: actions/download-artifact@v4
        with:
          name: ibc2-${{ runner.os }}
          path: ./contracts/ibc2/target/wasm32-unknown-unknown/release/ibc2.wasm

      - uses: actions/download-artifact@v4
        with:
          name: ibc-callbacks-${{ runner.os }}
          path: ./contracts/ibc-callbacks/target/wasm32-unknown-unknown/release/ibc_callbacks.wasm

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-${{ runner.os }}
          path: ./contracts/ibc-reflect/target/wasm32-unknown-unknown/release/ibc_reflect.wasm

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-send-${{ runner.os }}
          path: ./contracts/ibc-reflect-send/target/wasm32-unknown-unknown/release/ibc_reflect_send.wasm

      - uses: actions/download-artifact@v4
        with:
          name: nested-contracts-${{ runner.os }}
          path: ./contracts/nested-contracts/target/wasm32-unknown-unknown/release/nested_contracts.wasm

      - uses: actions/download-artifact@v4
        with:
          name: queue-${{ runner.os }}
          path: ./contracts/queue/target/wasm32-unknown-unknown/release/queue.wasm

      - uses: actions/download-artifact@v4
        with:
          name: reflect-${{ runner.os }}
          path: ./contracts/reflect/target/wasm32-unknown-unknown/release/reflect.wasm

      - uses: actions/download-artifact@v4
        with:
          name: replier-${{ runner.os }}
          path: ./contracts/replier/target/wasm32-unknown-unknown/release/replier.wasm

      - uses: actions/download-artifact@v4
        with:
          name: staking-${{ runner.os }}
          path: ./contracts/staking/target/wasm32-unknown-unknown/release/staking.wasm

      - uses: actions/download-artifact@v4
        with:
          name: virus-${{ runner.os }}
          path: ./contracts/virus/target/wasm32-unknown-unknown/release/virus.wasm

  nightly-rust:
    name: nightly-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust for compiling contracts
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-09-01 # This is a nightly channel for version 1.82.0
          target: wasm32-unknown-unknown
          components: clippy, rustfmt
          cache-directories: |
            ${{ github.workspace }}/contracts

      - name: Verify contracts
        run: ./gh-actions/verify-contracts-nightly

      - uses: actions/upload-artifact@v4
        with:
          name: floaty-${{ runner.os }}
          path: ./contracts/floaty/target/wasm32-unknown-unknown/release/floaty.wasm

  check-rel:
    name: check-released-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [stable-rust, nightly-rust]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust for compiling cosmwasm-check
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.87.0
          cache-key: rel

      - name: Install recently released cosmwasm-check
        run: cargo install cosmwasm-check@3.0.1

      - uses: actions/download-artifact@v4
        with:
          name: burner-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: crypto-verify-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: cyberpunk-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: empty-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: floaty-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: hackatom-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc2-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-callbacks-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-send-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: nested-contracts-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: queue-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: reflect-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: replier-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: staking-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: virus-${{ runner.os }}
          path: .

      - name: Check contracts
        shell: bash
        run: cosmwasm-check *.wasm

  check-dev:
    name: check-released-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [ stable-rust, nightly-rust ]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust for compiling cosmwasm-check
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.87.0
          cache-key: dev

      - name: Install currently developed cosmwasm-check
        run: cargo install --path ./packages/check --force

      - uses: actions/download-artifact@v4
        with:
          name: burner-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: crypto-verify-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: cyberpunk-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: empty-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: floaty-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: hackatom-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc2-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-callbacks-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: ibc-reflect-send-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: nested-contracts-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: queue-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: reflect-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: replier-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: staking-${{ runner.os }}
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: virus-${{ runner.os }}
          path: .

      - name: Check contracts
        shell: bash
        run: cosmwasm-check *.wasm

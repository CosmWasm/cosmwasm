name: contracts

on: [ push ]

jobs:
#  stable:
#    name: ${{ matrix.dir }} (stable) ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest]
#        dir: [ burner, crypto-verify, cyberpunk, empty, hackatom, ibc2, ibc-callbacks, ibc-reflect, ibc-reflect-send, nested-contracts, queue, reflect, replier, staking, virus ]
#    defaults:
#      run:
#        shell: bash
#        working-directory: contracts/${{ matrix.dir }}
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#
#      - name: Install Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: 1.82.0
#          target: wasm32-unknown-unknown
#          components: clippy, rustfmt
#          cache-directories: |
#            ${{ github.workspace }}/contracts
#
#      - name: Check formatting
#        run: cargo +1.82.0 fmt -- --check
#
#      - name: Run unit tests
#        run: cargo +1.82.0 test --lib --locked
#
#      - name: Build WASM binary
#        run: cargo +1.82.0 build --release --lib --locked --target wasm32-unknown-unknown
#
#      - name: Run linter
#        run: cargo +1.82.0 clippy --all-targets --tests -- -D warnings
#
#      - name: Run integration tests
#        run: cargo +1.82.0 test --test integration --locked
#
#      - name: Run schema generator
#        run: cargo +1.82.0 run --bin schema --locked
#
#      - name: Ensure schemas are up-to-date
#        run: git diff --quiet ./schema

  nightly:
    name: ${{ matrix.dir }} (nightly) ${{ runner.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        dir: [ floaty ]
    defaults:
      run:
        shell: bash
        working-directory: ./contracts/${{ matrix.dir }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust for compiling contracts
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-09-01 # This is a nightly channel for version 1.82.0
          target: wasm32-unknown-unknown
          components: clippy, rustfmt
          cache-directories: |
            ${{ github.workspace }}/contracts

      - name: Check formatting
        run: cargo +nightly-2024-09-01 fmt -- --check

      - name: Run unit tests
        run: cargo +nightly-2024-09-01 test --lib --locked

      - name: Build WASM binary
        run: RUSTFLAGS="-C target-feature=+nontrapping-fptoint" cargo +nightly-2024-09-01 build --release --lib --locked --target wasm32-unknown-unknown

      - name: Upload WASM binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dir }}-nightly-${{ runner.os }}
          path: ./contracts/${{ matrix.dir }}/target/wasm32-unknown-unknown/release/${{ matrix.dir }}.wasm

      - name: Run linter
        run: cargo +nightly-2024-09-01 clippy --all-targets --tests -- -D warnings

      - name: Run integration tests
        run: cargo +nightly-2024-09-01 test --test integration --locked

      - name: Run schema generator
        run: cargo +nightly-2024-09-01 run --bin schema --locked

      - name: Ensure schemas are up-to-date
        run: git diff --quiet ./schema

#  check-released:
#    name: check-released-${{ runner.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ ubuntu-latest ] #, macos-latest, windows-latest ]
#        dir: [ floaty ]
#    defaults:
#      run:
#        shell: bash
#        working-directory: ./contracts/${{ matrix.dir }}
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#
#      - name: Install Rust for compiling contracts
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: nightly-2024-09-01 # This is a nightly channel for version 1.82.0
#          target: wasm32-unknown-unknown
#          components: clippy, rustfmt
#          cache-directories: |
#            ${{ github.workspace }}/contracts
#
#      - name: Check formatting
#        run: cargo +nightly-2024-09-01 fmt -- --check
#
#      - name: Run unit tests
#        run: cargo +nightly-2024-09-01 test --lib --locked
#
#      - name: Build WASM binary
#        run: RUSTFLAGS="-C target-feature=+nontrapping-fptoint" cargo +nightly-2024-09-01 build --release --lib --locked --target wasm32-unknown-unknown
#
#      - name: Upload WASM binary
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ matrix.dir }}-nightly-${{ runner.os }}
#          path: ./contracts/${{ matrix.dir }}/target/wasm32-unknown-unknown/release/${{ matrix.dir }}.wasm
#
#      - name: Run linter
#        run: cargo +nightly-2024-09-01 clippy --all-targets --tests -- -D warnings
#
#      - name: Run integration tests
#        run: cargo +nightly-2024-09-01 test --test integration --locked
#
#      - name: Run schema generator
#        run: cargo +nightly-2024-09-01 run --bin schema --locked
#
#      - name: Ensure schemas are up-to-date
#        run: git diff --quiet ./schema

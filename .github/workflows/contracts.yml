name: contracts

on: [ push ]

jobs:
  stable:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.82.0
          targets: wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Check contracts
        run: |
          for contract_dir in contracts/*/; do
          (
            echo "Checking contract: $contract_dir"
            cd "$contract_dir"
            cargo fmt -- --check
            cargo test --lib --locked
          )
          done
#      - name: Check formatting
#        run: cargo fmt -- --check
#
#      - name: Run unit tests
#        run: cargo test --lib --locked
#
#      - name: Build WASM binary
#        run: cargo build --release --lib --locked --target wasm32-unknown-unknown
#
#      - name: Run linter
#        run: cargo clippy --all-targets --tests -- -D warnings
#
#      - name: Run integration tests
#        run: cargo test integration --locked
#
#      - name: Build and run schema generator
#        run: cargo run --bin schema --locked
#
#      - name: Ensure schemas are up-to-date
#        run: git diff --quiet ./schema
#
#      - name: Install recently released cosmwasm-check
#        run: cargo install cosmwasm-check@${{ env.COSMWASM_CHECK_VERSION }} --locked --force
#
#      - name: Check contract using recently released cosmwasm-check
#        run: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm
#
#      - name: Install most recent version of cosmwasm-check
#        run: cargo install --path ../../packages/check --locked --force
#
#      - name: Check contract using most recent version of cosmwasm-check
#        run: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm

name: packages

on: [ pull_request_review ]

env:
  TOOLCHAIN_STABLE: 1.82.0 # toolchain for building packages

jobs:
  format:
    name: format-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: rustfmt

      - run: cargo fmt -- --check

  package-cosmwasm-core:
    name: cosmwasm-core-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          targets: thumbv7em-none-eabi, wasm32-unknown-unknown
          components: clippy

      - run: cargo clippy -p cosmwasm-core --all-targets -- -D warnings
      - run: cargo clippy -p cosmwasm-core --all-features --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-core --locked
      - run: cargo build  -p cosmwasm-core --locked --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-core --locked --release --lib --target thumbv7em-none-eabi
      - run: cargo build  -p cosmwasm-core --locked --no-default-features
      - run: cargo build  -p cosmwasm-core --locked --no-default-features --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-core --locked --no-default-features --release --lib --target thumbv7em-none-eabi
      - run: cargo build  -p cosmwasm-core --locked --all-features
      - run: cargo build  -p cosmwasm-core --locked --all-features --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-core --locked --all-features --release --lib --target thumbv7em-none-eabi
      - run: cargo test   -p cosmwasm-core --locked --no-default-features
      - run: cargo test   -p cosmwasm-core --locked --all-features

  package-cosmwasm-crypto:
    name: cosmwasm-crypto-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-crypto --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-crypto --locked
      - run: cargo test   -p cosmwasm-crypto --locked

  package-cw-schema:
    name: cw-schema-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cw-schema --all-targets -- -D warnings
      - run: cargo build  -p cw-schema --locked
      - run: cargo test   -p cw-schema --locked

  package-cw-schema-derive:
    name: cw-schema-derive-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cw-schema-derive --all-targets -- -D warnings
      - run: cargo build  -p cw-schema-derive --locked
      - run: cargo test   -p cw-schema-derive --locked

  package-cosmwasm-derive:
    name: cosmwasm-derive-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-derive --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-derive --locked
      - run: cargo test   -p cosmwasm-derive --locked

  package-cosmwasm-schema:
    name: cosmwasm-schema-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-schema --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-schema --locked
      - run: cargo test   -p cosmwasm-schema --locked

  package-cosmwasm-schema-derive:
    name: cosmwasm-schema-derive-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-schema-derive --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-schema-derive --locked
      - run: cargo test   -p cosmwasm-schema-derive --locked

  package-cosmwasm-std:
    name: cosmwasm-std-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          targets: wasm32-unknown-unknown
          components: clippy

      - run: cargo clippy -p cosmwasm-std --all-targets -- -D warnings
      - run: cargo clippy -p cosmwasm-std --all-targets --features std,iterator,staking,stargate -- -D warnings
      - run: cargo clippy -p cosmwasm-std --all-features --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-std --locked
      - run: cargo build  -p cosmwasm-std --locked --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-std --locked --no-default-features --features std
      - run: cargo build  -p cosmwasm-std --locked --no-default-features --features std --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-std --locked --features std,iterator,staking,stargate,cosmwasm_1_2
      - run: cargo build  -p cosmwasm-std --locked --features std,iterator,staking,stargate,cosmwasm_1_2 --release --lib --target wasm32-unknown-unknown
      - run: cargo build  -p cosmwasm-std --locked --all-features
      - run: cargo build  -p cosmwasm-std --locked --all-features --release --lib --target wasm32-unknown-unknown
      - run: cargo test   -p cosmwasm-std --locked
      - run: cargo test   -p cosmwasm-std --locked --no-default-features --features std
      - run: cargo test   -p cosmwasm-std --locked --features std,iterator,staking,stargate,cosmwasm_1_2
      - run: cargo test   -p cosmwasm-std --locked --all-features

  package-cosmwasm-vm:
    name: cosmwasm-vm-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-vm --all-targets --no-default-features -- -D warnings
      - run: cargo clippy -p cosmwasm-vm --all-targets --features iterator,staking,stargate -- -D warnings
      - run: cargo build  -p cosmwasm-vm --locked
      - run: cargo build  -p cosmwasm-vm --locked --features iterator,staking,stargate
      - run: cargo build  -p cosmwasm-vm --locked --all-features
      - run: cargo test   -p cosmwasm-vm --locked
      - run: cargo test   -p cosmwasm-vm --locked --features iterator,staking,stargate
      - run: cargo test   -p cosmwasm-vm --locked --all-features
      - run: |
          cargo build --locked --example multi_threaded_cache
          time target/debug/examples/multi_threaded_cache > /dev/null
        if: runner.os == 'Linux'

  package-cosmwasm-vm-derive:
    name: cosmwasm-vm-derive-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-vm-derive --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-vm-derive --locked
      - run: cargo test   -p cosmwasm-vm-derive --locked

  package-cosmwasm-check:
    name: cosmwasm-check-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_STABLE }}
          components: clippy

      - run: cargo clippy -p cosmwasm-check --all-targets -- -D warnings
      - run: cargo build  -p cosmwasm-check --locked
      - run: cargo test   -p cosmwasm-check --locked
